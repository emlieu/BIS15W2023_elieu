geom_bar()+
facet_wrap(~pop)
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Sexual Composition By Wolf Pack Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Select Wolf Population", choices= c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT,AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH" ), selected="AK.PEN"),
plotOutput("plot", width="600px", height="500px")
))
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
ggplot(aes(x=sex, fill=sex))+
geom_bar()+
facet_wrap(~pop)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Sexual Composition By Wolf Pack Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Select Wolf Population", choices= c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT,AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH" ), selected="AK.PEN"),
plotOutput("plot", width="600px", height="500px")
))
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
ggplot(aes(x=sex, fill=sex))+
geom_bar()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Sexual Composition By Wolf Pack Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Select Wolf Population", choices= c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT,AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH" ), selected="AK.PEN"),
plotOutput("plot", width="600px", height="500px")
))
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
ggplot(aes(x=sex, fill=input$sex))+
geom_bar()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- fluidPage(titlePanel("Homerange Locomotion"),
radioButtons("x", "Select Fill Variable", choices=c("trophic.guild", "thermoregulation"), selected="trophic.guild"),
plotOutput("plot", width="600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(homerange, aes_string(x="locomotion", fill=input$x)) +
geom_bar(position="dodge", alpha=0.8, color="black") +
theme_light(base_size=18) +
labs(x=NULL, y=NULL, fill="Fill Variable")
})
}
shinyApp(ui, server)
ui <- fluidPage(titlePanel("Homerange Locomotion"),
radioButtons("x", "Select Fill Variable", choices=c("trophic.guild", "thermoregulation"), selected="trophic.guild"),
plotOutput("plot", width="600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(homerange, aes_string(x="locomotion", fill=input$x)) +
geom_bar(position="dodge", alpha=0.8, color="black") +
theme_light(base_size=18) +
labs(x=NULL, y=NULL, fill="Fill Variable")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Sexual Composition By Wolf Pack Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Select Wolf Population", choices= c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT,AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH" ), selected="AK.PEN"),
plotOutput("plot", width="600px", height="500px")
))
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
ggplot(aes(x="sex", fill=input$x))+
geom_bar()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Sexual Composition By Wolf Pack Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Select Wolf Population", choices= c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT,AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH" ), selected="AK.PEN"),
plotOutput("plot", width="600px", height="500px")
))
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
ggplot(aes(x="sex", fill=sex))+
geom_bar()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Sexual Composition By Wolf Pack Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Select Wolf Population", choices= c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT,AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH" ), selected="AK.PEN"),
plotOutput("plot", width="600px", height="500px")
))
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
ggplot(aes(x="sex", fill=sex))+
geom_bar(position = "dodge")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Sexual Composition By Wolf Pack Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Select Wolf Population", choices= c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT,AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH" ), selected="AK.PEN"),
plotOutput("plot", width="600px", height="500px")
))
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
ggplot(aes(x="sex", fill=sex))+
geom_bar(position = "dodge", alpha= .8, color= "black")+
theme_light(base_size= 18)+
labs(x= "Sex",
y= "Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Sexual Composition By Wolf Pack Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("population", "Select Wolf Population", choices= c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT,AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH" ), selected="AK.PEN"),
plotOutput("plot", width="600px", height="500px")
))
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
ggplot(aes(x="sex", fill=sex))+
geom_bar(position = "dodge", alpha= .8, color= "black")+
theme_light(base_size= 18)+
labs(x= "Sex",
y= "Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
wolves
wolves %>%
pivot_wider(names_from= "pop",
values_from= "sex")
ui <- dashboardPage(
dashboardHeader(title = "Sexual Composition By Wolf Pack Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("population", "Select Wolf Population", choices= c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT,AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH" ), selected="AK.PEN"),
plotOutput("plot", width="600px", height="500px")
))
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
ggplot(aes(x="sex", fill=sex))+
geom_bar(position = "dodge", alpha= .8, color= "black")+
theme_light(base_size= 18)+
labs(x= "Sex",
y= "Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Sexual Composition By Wolf Pack Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("population", "Select Wolf Population", choices= c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT,AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH" ), selected="AK.PEN"),
plotOutput("plot", width="600px", height="500px")
))
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
ggplot(aes(x="sex",y= "pop", fill=sex))+
geom_col(alpha= .8, color= "black")+
theme_light(base_size= 18)+
labs(x= "Sex",
y= "Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Sexual Composition By Wolf Pack Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("population", "Select Wolf Population", choices= c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT,AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH" ), selected="AK.PEN"),
plotOutput("plot", width="600px", height="500px")
))
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
ggplot(aes(x="sex",y= "pop", fill=sex))+
geom_col(position= "dodge", alpha= .8, color= "black")+
theme_light(base_size= 18)+
labs(x= "Sex",
y= "Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- fluidPage(titlePanel("Homerange Locomotion"),
radioButtons("x", "Select Fill Variable", choices=c("trophic.guild", "thermoregulation"), selected="trophic.guild"),
plotOutput("plot", width="600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(homerange, aes_string(x="locomotion", fill=input$x)) +
geom_bar(position="dodge", alpha=0.8, color="black") +
theme_light(base_size=18) +
labs(x=NULL, y=NULL, fill="Fill Variable")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Penguins"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_depth_mm"),
sliderInput("pointsize", "Select the Point Size", min = 1, max = 5, value = 2, step = 0.5)
), # close the first box
box(title = "Plot of Penguins Data", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(penguins, aes_string(x = input$x, y = input$y, color="species")) +
geom_point(size=input$pointsize, alpha=0.8) +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
wolves %>%
select(pop, sex) %>%
tabyl(sex)
wolves %>%
select(pop, sex) %>%
table(pop$sex)
wolves %>%
select(pop, sex) %>%
count(pop)
wolves %>%
group_by(pop) %>%
filter(sex != "NA") %>%
count(sex)
ui <- dashboardPage(
dashboardHeader(title = "Sexual Composition By Wolf Pack Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("population", "Select Wolf Population", choices= c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT,AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH" ), selected="AK.PEN"),
plotOutput("plot", width="600px", height="500px")
))
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
group_by(pop) %>%
filter(sex != "NA") %>%
count(sex) %>%
ggplot(aes(x="sex", fill=n))+
geom_bar(position= "dodge", alpha= .8, color= "black")+
theme_light(base_size= 18)+
labs(x= "Sex",
y= "Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Sexual Composition By Wolf Pack Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("population", "Select Wolf Population", choices= c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT,AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH" ), selected="AK.PEN"),
plotOutput("plot", width="600px", height="500px")
))
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
group_by(pop) %>%
filter(sex != "NA") %>%
count(sex) %>%
ggplot(aes(x="sex", fill=sex))+
geom_bar(position= "dodge", alpha= .8, color= "black")+
theme_light(base_size= 18)+
labs(x= "Sex",
y= "Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Sexual Composition By Wolf Pack Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("population", "Select Wolf Population", choices= c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT,AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH" ), selected="AK.PEN"),
plotOutput("plot", width="600px", height="500px")
))
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
group_by(pop) %>%
filter(sex != "NA") %>%
count(sex) %>%
ggplot(aes(x="sex", y= "n", fill=sex))+
geom_col(position= "dodge", alpha= .8, color= "black")+
theme_light(base_size= 18)+
labs(x= "Sex",
y= "Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Sexual Composition By Wolf Pack Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("population", "Select Wolf Population", choices= c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT,AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH" ), selected="AK.PEN"),
plotOutput("plot", width="600px", height="500px")
))
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
group_by(pop) %>%
filter(sex != "NA") %>%
count(sex) %>%
ggplot(aes(x="sex", y=input$sex, fill=sex))+
geom_col(position= "dodge", alpha= .8, color= "black")+
theme_light(base_size= 18)+
labs(x= "Sex",
y= "Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Sexual Composition By Wolf Pack Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("population", "Select Wolf Population", choices= c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT,AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH" ), selected="AK.PEN"),
plotOutput("plot", width="600px", height="500px")
))
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
group_by(pop) %>%
filter(sex != "NA") %>%
count(sex) %>%
ggplot(aes(x="sex", fill=sex))+
geom_bar(position= "dodge", alpha= .8, color= "black")+
theme_light(base_size= 18)+
labs(x= "Sex",
y= "Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
knitr::opts_chunk$set(echo = TRUE)
ui <- dashboardPage(
dashboardHeader(title = "UC Campus Admissions by Ethnicity 2010-2019"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admit Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants")
), # close the first box
box(title = "UC Admissions", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=reorder(Ethnicity, FilteredCountFR), y=FilteredCountFR)) +
geom_col(color="black", fill="steelblue", alpha=0.75) +
theme_light(base_size = 18) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Ethnicity", y = "Number")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
UC_admit <- UC_admit %>%
filter(Ethnicity!="All")
UC_admit <- readr::read_csv("data/UC_admit.csv")
UC_admit <- readr::read_csv("data/UC_admit.csv")
UC_admit <- UC_admit %>%
filter(Ethnicity!="All")
ui <- dashboardPage(
dashboardHeader(title = "UC Campus Admissions by Ethnicity 2010-2019"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admit Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants")
), # close the first box
box(title = "UC Admissions", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=reorder(Ethnicity, FilteredCountFR), y=FilteredCountFR)) +
geom_col(color="black", fill="steelblue", alpha=0.75) +
theme_light(base_size = 18) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Ethnicity", y = "Number")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
wolves %>%
group_by(pop) %>%
filter(sex != "NA") %>%
count(sex) %>%
pivot_wider(names_from = "pop",
values_from = "n")
wolves %>%
group_by(pop) %>%
filter(sex != "NA") %>%
count(sex) %>%
pivot_wider(names_from = "pop",
values_from = "n")
wolves %>%
group_by(pop) %>%
filter(sex != "NA") %>%
count(sex) %>%
pivot_wider(names_from = "pop",
values_from = "n")
wolves %>%
group_by(pop) %>%
filter(sex != "NA") %>%
count(sex) %>%
pivot_wider(names_from = "pop",
values_from = "n")
wolves %>%
group_by(pop) %>%
filter(sex != "NA") %>%
count(sex) %>%
pivot_wider(names_from = "pop",
values_from = "n")
wolves %>%
group_by(pop) %>%
filter(sex != "NA") %>%
count(sex) %>%
pivot_wider(names_from = "pop",
values_from = "n")
